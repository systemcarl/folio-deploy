query_json() {
    local strict=false
    if [[ "$1" == "-e" ]]; then strict=true; shift; fi

    local json="$1"
    local query="$2"
    local output
    output=$(node -e "
        const json = JSON.parse(process.argv[1]);
        console.log(json[process.argv[2]]);
    " -- "$json" "$query" 2>/dev/null)
    if [[ $? -ne 0 ]]; then
        echo "Error: Failed to parse JSON." >&2
        return 1
    fi
    if [[ "$strict" = "true" ]] && [[ "$output" == "undefined" ]]; then
        echo "Error: Unable to parse JSON or query not found." >&2
        echo "  json: $json" >&2
        echo "  query: $query" >&2
        return 1
    fi
    echo "$output"
}

find_json() {
    local strict=false
    local order="first"
    while [[ "$1" == -* ]]; do
        case "$1" in
            -e) strict=true ;;
            -l) order="last" ;;
            *) echo "Error: Unknown option $1" >&2; return 1 ;;
        esac
        shift
    done

    local json="$1"
    local query_key="$2"
    local query_value="$3"

    local index="0"
    if [[ "$order" == "last" ]]; then index="match.length - 1"; fi
    local output
    output=$(node -e "
        const json = JSON.parse(process.argv[1]);
        const match = json.filter(i => i[process.argv[2]] === process.argv[3]);
        console.log(JSON.stringify(match[$index] || ''));
    " -- "$json" "$query_key" "$query_value" 2>/dev/null)
    if [[ $? -ne 0 ]]; then
        echo "Error: Failed to parse JSON." >&2
        return 1
    fi
    if [[ "$strict" = "true" ]] && ( \
        [[ -z "$output" || "$output" == '""' ]] \
    ); then
        echo "Error: Unable to find item in JSON." >&2
        echo "  json: $json" >&2
        echo "  query_key: $query_key" >&2
        echo "  query_value: $query_value" >&2
        return 1
    fi
    echo "$output"
}
